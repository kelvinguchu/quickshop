/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    subcategories: Subcategory;
    products: Product;
    orders: Order;
    'custom-orders': CustomOrder;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    subcategories: SubcategoriesSelect<false> | SubcategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'custom-orders': CustomOrdersSelect<false> | CustomOrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  /**
   * Upload a profile photo
   */
  profilePhoto?: (string | null) | Media;
  /**
   * User's saved cart items
   */
  cart?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User's saved wishlist items
   */
  wishlist?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * User's mobile/phone number
   */
  phone?: string | null;
  /**
   * User's saved body measurements for custom orders by category
   */
  savedMeasurements?: {
    /**
     * Measurements for abaya category
     */
    abaya?: {
      /**
       * Chest measurement in cm
       */
      chest?: number | null;
      /**
       * Shoulder width in cm
       */
      shoulder?: number | null;
      /**
       * Sleeve length in cm
       */
      sleeve?: number | null;
      /**
       * Total length in cm
       */
      length?: number | null;
      /**
       * Waist measurement in cm
       */
      waist?: number | null;
      /**
       * Hip measurement in cm
       */
      hip?: number | null;
    };
    /**
     * Measurements for qamis category
     */
    qamis?: {
      /**
       * Chest measurement in cm
       */
      chest?: number | null;
      /**
       * Shoulder width in cm
       */
      shoulder?: number | null;
      /**
       * Sleeve length in cm
       */
      sleeve?: number | null;
      /**
       * Total length in cm
       */
      length?: number | null;
      /**
       * Waist measurement in cm
       */
      waist?: number | null;
      /**
       * Hip measurement in cm
       */
      hip?: number | null;
    };
  };
  /**
   * User's saved shipping address
   */
  savedShippingAddress?: {
    /**
     * Street address
     */
    address?: string | null;
    /**
     * City
     */
    city?: string | null;
    /**
     * Country
     */
    country?: string | null;
    /**
     * Postal/ZIP code
     */
    postalCode?: string | null;
  };
  /**
   * User role for access control
   */
  role: 'customer' | 'admin';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  /**
   * URL-friendly version of the name (e.g., "abaya", "qamis", "custom")
   */
  slug: string;
  description?: string | null;
  featured?: boolean | null;
  /**
   * Order to display the category (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Main category image for display on homepage and collection pages
   */
  image: string | Media;
  /**
   * Optional larger banner image for category page headers
   */
  bannerImage?: (string | null) | Media;
  /**
   * Subcategories associated with this main category
   */
  subcategories?: (string | Subcategory)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories".
 */
export interface Subcategory {
  id: string;
  name: string;
  /**
   * URL-friendly version of the name (e.g., "classic", "modern")
   */
  slug: string;
  /**
   * The main category this subcategory belongs to
   */
  category: string | Category;
  description?: string | null;
  /**
   * Order to display the subcategory (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Image for the subcategory
   */
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  price: number;
  category: string | Category;
  /**
   * Select a subcategory that belongs to the selected main category
   */
  subcategory?: (string | null) | Subcategory;
  status: 'active' | 'draft' | 'out-of-stock';
  featured?: boolean | null;
  trending?: boolean | null;
  sku?: string | null;
  mainImage: string | Media;
  color: string;
  /**
   * Hex code or color name for the main color
   */
  colorCode?: string | null;
  colorVariations?:
    | {
        color: string;
        colorCode?: string | null;
        image: string | Media;
        additionalImages?:
          | {
              image: string | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  sizeVariations?:
    | {
        size: 'S' | 'M' | 'L' | 'XL' | 'XXL';
        inStock?: boolean | null;
        id?: string | null;
      }[]
    | null;
  heightRanges?:
    | {
        min: number;
        max: number;
        /**
         * E.g., "Short", "Regular", "Tall"
         */
        label: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  /**
   * Unique order identifier
   */
  orderNumber: string;
  customer: {
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
  };
  shippingAddress: {
    address: string;
    city: string;
    country: string;
    postalCode: string;
  };
  items: {
    productId: string;
    name: string;
    price: number;
    quantity: number;
    image?: string | null;
    id?: string | null;
  }[];
  subtotal: number;
  shippingFee?: number | null;
  total: number;
  status: 'pending' | 'processing' | 'paid' | 'shipped' | 'delivered' | 'cancelled';
  payment: {
    method: 'card' | 'mpesa' | 'bank';
    /**
     * Payment provider transaction ID
     */
    transactionId?: string | null;
    status?: ('pending' | 'processing' | 'complete' | 'failed') | null;
    /**
     * Additional payment details from provider
     */
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Custom measurement orders with deposit payments
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-orders".
 */
export interface CustomOrder {
  id: string;
  /**
   * Unique custom order identifier
   */
  orderNumber: string;
  /**
   * ID of the user who created this order
   */
  userId: string;
  product: {
    /**
     * Product ID/slug
     */
    id: string;
    name: string;
    price: number;
    /**
     * Product image URL
     */
    image?: string | null;
  };
  measurements: {
    /**
     * Chest measurement in cm
     */
    chest: number;
    /**
     * Shoulder width in cm
     */
    shoulder: number;
    /**
     * Sleeve length in cm
     */
    sleeve: number;
    /**
     * Total length in cm
     */
    length: number;
    /**
     * Waist measurement in cm
     */
    waist: number;
    /**
     * Hip measurement in cm
     */
    hip: number;
  };
  customer: {
    firstName: string;
    lastName: string;
    email: string;
    phone: string;
  };
  shippingAddress: {
    address: string;
    city: string;
    country: string;
    postalCode: string;
  };
  /**
   * 30% deposit amount paid
   */
  depositAmount: number;
  /**
   * Remaining 70% to be paid
   */
  remainingAmount: number;
  /**
   * Total order amount
   */
  totalAmount: number;
  payment: {
    method: 'card' | 'mpesa' | 'bank';
    /**
     * Payment provider transaction ID for deposit
     */
    transactionId?: string | null;
    status?: ('pending' | 'complete' | 'failed') | null;
    /**
     * Additional payment details from provider
     */
    details?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  /**
   * Final 70% payment details
   */
  finalPayment?: {
    method?: ('card' | 'mpesa' | 'bank' | 'cod') | null;
    /**
     * Payment provider transaction ID for final payment
     */
    transactionId?: string | null;
    status?: ('pending' | 'complete' | 'failed') | null;
    /**
     * When the final payment was completed
     */
    paidAt?: string | null;
  };
  status:
    | 'deposit-paid'
    | 'in-production'
    | 'quality-check'
    | 'ready-for-payment'
    | 'fully-paid'
    | 'shipped'
    | 'delivered'
    | 'cancelled';
  /**
   * Customer notes or special requirements
   */
  notes?: string | null;
  /**
   * Internal production notes
   */
  productionNotes?: string | null;
  /**
   * Estimated completion date for production
   */
  estimatedCompletionDate?: string | null;
  /**
   * When the order was completed
   */
  completedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'subcategories';
        value: string | Subcategory;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'custom-orders';
        value: string | CustomOrder;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  profilePhoto?: T;
  cart?: T;
  wishlist?: T;
  phone?: T;
  savedMeasurements?:
    | T
    | {
        abaya?:
          | T
          | {
              chest?: T;
              shoulder?: T;
              sleeve?: T;
              length?: T;
              waist?: T;
              hip?: T;
            };
        qamis?:
          | T
          | {
              chest?: T;
              shoulder?: T;
              sleeve?: T;
              length?: T;
              waist?: T;
              hip?: T;
            };
      };
  savedShippingAddress?:
    | T
    | {
        address?: T;
        city?: T;
        country?: T;
        postalCode?: T;
      };
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  featured?: T;
  displayOrder?: T;
  image?: T;
  bannerImage?: T;
  subcategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories_select".
 */
export interface SubcategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  category?: T;
  description?: T;
  displayOrder?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  status?: T;
  featured?: T;
  trending?: T;
  sku?: T;
  mainImage?: T;
  color?: T;
  colorCode?: T;
  colorVariations?:
    | T
    | {
        color?: T;
        colorCode?: T;
        image?: T;
        additionalImages?:
          | T
          | {
              image?: T;
              id?: T;
            };
        id?: T;
      };
  sizeVariations?:
    | T
    | {
        size?: T;
        inStock?: T;
        id?: T;
      };
  heightRanges?:
    | T
    | {
        min?: T;
        max?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?:
    | T
    | {
        firstName?: T;
        lastName?: T;
        email?: T;
        phone?: T;
      };
  shippingAddress?:
    | T
    | {
        address?: T;
        city?: T;
        country?: T;
        postalCode?: T;
      };
  items?:
    | T
    | {
        productId?: T;
        name?: T;
        price?: T;
        quantity?: T;
        image?: T;
        id?: T;
      };
  subtotal?: T;
  shippingFee?: T;
  total?: T;
  status?: T;
  payment?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
        details?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "custom-orders_select".
 */
export interface CustomOrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  userId?: T;
  product?:
    | T
    | {
        id?: T;
        name?: T;
        price?: T;
        image?: T;
      };
  measurements?:
    | T
    | {
        chest?: T;
        shoulder?: T;
        sleeve?: T;
        length?: T;
        waist?: T;
        hip?: T;
      };
  customer?:
    | T
    | {
        firstName?: T;
        lastName?: T;
        email?: T;
        phone?: T;
      };
  shippingAddress?:
    | T
    | {
        address?: T;
        city?: T;
        country?: T;
        postalCode?: T;
      };
  depositAmount?: T;
  remainingAmount?: T;
  totalAmount?: T;
  payment?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
        details?: T;
      };
  finalPayment?:
    | T
    | {
        method?: T;
        transactionId?: T;
        status?: T;
        paidAt?: T;
      };
  status?: T;
  notes?: T;
  productionNotes?: T;
  estimatedCompletionDate?: T;
  completedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}